---
- name: POSTGRES installation and configuration
  hosts: cdpcm
  become: true

  tasks:
  - name: create folder for DB if it does not exist
    file:
      path: "{{ postgres_backup_dir }}"
      state: directory
      owner: postgres
      group: postgres
      mode: '0755'

  - name: check that postgres directory is free
    find:
      paths: "{{ postgres_data_dir }}"
    register: filesFound

  - name: set collation for postgres
    lineinfile:
      path: /etc/locale.conf
      regexp: '^LC_ALL=.*'
      line: "LC_ALL=en_US.UTF-8"

  - name: create postgres instance
    become: yes
    become_user: postgres
    shell: "{{ postgres_bin_path }}/initdb -D {{ postgres_data_dir }}"
    register: hstore_ext_result
    when: filesFound.matched == 0

  - name: update default service file
    lineinfile:
      path: /usr/lib/systemd/system/postgresql-{{ postgres_version }}.service
      backup: yes
      regexp: '^Environment=PGDATA=.*'
      line: "Environment=PGDATA={{ postgres_data_dir }}"

  - name:  create folder for configuration backups
    file: 
      path: "{{ postgres_data_dir }}/bck_conf_files"
      state: directory
      owner: postgres
      group: postgres
      mode: '0755'

  - name: create folder for logs archival
    file:
      path: "{{ postgres_archiving_folder }}"
      state: directory
      owner: postgres
      group: postgres
      mode: '0755'
    when: postgres_archiving_folder != '/bin/true'

  - name: change postgres network configuration
    lineinfile:
      path: "{{ postgres_data_dir }}/postgresql.conf"
      backup: yes
      regexp: '{{item.From}}'
      line: '{{item.To}}'
    with_items:
      - { From: ".*listen_addresses =.*", To: "listen_addresses = '*'" }
      - { From: '.*max_connections =.*', To: 'max_connections = 300' }
      - { From: 'shared_buffers =.*', To: 'shared_buffers = 256MB' }
      - { From: '.*archive_mode = off', To: 'archive_mode = on' }
      - { From: '.*wal_buffers = .*', To: 'wal_buffers = 8MB' }
      - { From: '.*min_wal_size = .*', To: 'min_wal_size = 1024MB' }
      - { From: '.*checkpoint_completion_target = .*', To: 'checkpoint_completion_target = 0.9' }
      - { From: ".*archive_command =.*" , To: "archive_command = '{{ postgres_archive_cmd }}'" }

  - name: allow trust of local users pg_hba configuration
    lineinfile:
      path: "{{ postgres_data_dir }}/pg_hba.conf"
      backup: yes
      regexp: '^host.*all.*all.*md5.*'
      line: 'host    all             all             127.0.0.1/32            ident'

  - name: add ranger admin access for all hosts in pg_hba.conf
    lineinfile:
      path: "{{ postgres_data_dir }}/pg_hba.conf"
      insertafter: 'host    all             all             127.0.0.1/32            ident'
      line: 'host    ranger          rangeradmin     0.0.0.0/0               md5'
      state: present

  - name: start postgres service
    service:
      name: postgresql-{{ postgres_version }}
      state: started
      enabled: yes

  - name: create users for cdp
    become: yes
    become_user: postgres
    command: createuser {{ item }} 
    with_items:
      - scm
      - rman
      - hue
      - metastore
      - oozie
      - das
      - schemaregistry
      - smm
      - registry
      - streamsmsgmgr

  - name: create users for cdp
    become: yes
    become_user: postgres
    command: createdb {{ item }} --owner {{ item }}  
    with_items:
      - scm
      - rman
      - hue
      - metastore
      - oozie
      - das
      - schemaregistry
      - smm
      - registry
      - streamsmsgmgr


  - name: create ranger database
    become: yes
    become_user: postgres
    command: "{{ item }}"
    with_items:
      - createuser rangeradmin
      - createdb ranger --owner rangeradmin

  - name: set password of users
    become: yes
    become_user: postgres
    command: "{{ item }}"
    with_items:
      - echo "alter user scm with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user rman with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user hue with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user metastore with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user oozie with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user das with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user schemaregistry with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user smm with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user rangeradmin with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user registry with password '{{ postgres_cdp_users_pass }}';"| psql
      - echo "alter user streamsmsgmgr with password '{{ postgres_cdp_users_pass }}';"| psql