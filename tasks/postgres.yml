---
- name: POSTGRES installation and configuration
  hosts: cdpcm
  become: true  

  tasks:
  - name: install postgres repository
    yum_repository: 
      name: pgdg11
      description: PostgreSQL 12 for RHEL/CentOS $releasever - $basearch
      file: pgdg-redhat-all  
      baseurl: "{{ postgres_repository }}"
      repo_gpgcheck: no
      gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG
      enabled: yes

  - name: install postgres common repository
    yum_repository:
      name: pgdg-common
      description: PostgreSQL common RPMs for RHEL/CentOS $releasever - $basearch
      file: pgdg-redhat-all
      baseurl: "{{ postgres_common }}"
      repo_gpgcheck: no
      gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG
      enabled: yes

  - name: install postgres sofware
    yum:
      name: 
        - postgresql{{ postgres_version }}-server
        - postgresql{{ postgres_version }}-contrib
        - repmgr{{ postgres_version }}
      state: present

  - name: create folder for DB if it does not exist
    file:
      path: "{{ postgres_backup_dir }}"
      state: directory
      owner: postgres
      group: postgres
      mode: '0755'

  - name: check that postgres directory is free
    find:
      paths: "{{ postgres_data_dir }}"
    register: filesFound

  - name: create postgres instance
    become: yes
    become_user: postgres
    shell: "{{ postgres_bin_path }}/initdb -D {{ postgres_data_dir }}"
    register: hstore_ext_result
    when: filesFound.matched == 0

  - name: update default service file
    lineinfile:
      path: /usr/lib/systemd/system/postgresql-{{ postgres_version }}.service
      backup: yes
      regexp: '^Environment=PGDATA=.*'
      line: "Environment=PGDATA={{ postgres_data_dir }}"

  - name:  create folder for configuration backups
    file: 
      path: "{{ postgres_data_dir }}/bck_conf_files"
      state: directory
      owner: postgres
      group: postgres
      mode: '0755'

  - name: create folder for logs archival
    file:
      path: "{{ postgres_archiving_folder }}"
      state: directory
      owner: postgres
      group: postgres
      mode: '0755'
    when: postgres_archiving_folder != '/bin/true'

  - name: change postgres network configuration
    lineinfile:
      path: "{{ postgres_data_dir }}/postgresql.conf"
      backup: yes
      regexp: '{{item.From}}'
      line: '{{item.To}}'
    with_items:
      - { From: ".*listen_addresses =.*", To: "listen_addresses = '*'" }
      - { From: '.*max_connections =.*', To: 'max_connections = 300' }
      - { From: 'shared_buffers =.*', To: 'shared_buffers = 256MB' }
      - { From: '.*archive_mode = off', To: 'archive_mode = on' }
      - { From: ".*archive_command =.*" , To: "archive_command = '{{ postgres_archive_cmd }}'" }

  - name: start postgres service
    service:
      name: postgresql-{{ postgres_version }}
      state: started
      enabled: yes